●文字型
・char
   1byte
   -128 〜 127
・unsigned char
   1byte
   0 〜 255

 [注意]
 上記のデータ型はasciiに対応している
 一般の文字コードを扱うには wchar_t を用いる
 Unicodeを用いる場合には
  char16_t ：UTF-16に対応した, uint_least16_t のサフィックス
  char32_t ：UTF-32            uint_least32_t
 を用いる
 それらのsizeは処理系に依存する


●整数型
・short int
   2byte
   -32768 〜 32767

・unsigned short
   2byte
   0 〜 65535

・int
   4byte
   -2147483648 〜 2147483647

・long int
   4byte
   -2147483648 〜 2147483647

・unsigned long
   4byte
   0 〜 4294967295

 [注意]
 単なる"int"や"unsigned int"の意味合いはコンパイラによって揺れがある(2 or 4byte)
 明示するために"short","long"を用いる


●浮動小数点型
・float
   4byte
   3.4x10^(-38) 〜 3.4x10^38 ：有効桁数7桁

・double
   8byte
   1.7x10^(-308) 〜 1.7x10^308 ：有効桁数16桁


 [注意]
 各データ型でサポートされていない範囲の値を代入した場合,
 実行時の処理はコンパイラに依存する
  例：char型(-128 〜 127)に 200 を代入した場合
      コンパイラによっては -128 + (200 - 128) = -56 という結果になる


--------------------------------------------------------------------------------
●サフィックス
 U  unsigned
 L  long
 UL unsigned long
 F  float


●文字コードの出力
 '(文字)'  対応したasciiコード(0 ~ 127)を返す
 u'(文字)' 対応したUTF-16文字コードを返す
 U'(文字)'         UTF-32


●データサイズの出力
 sizeof(型) ：型に応じたサイズをbyte単位で返す


●エスケープシーケンス
\n 改行
\0 NULL


●配列への連続した代入
 char (配列名) = "(文字列)";
 char (配列名) = {'(文字1)','(文字2)',…,'(文字n)'};
  →(文字数+1)の長さをもつ配列が自動的に生成され,最後にNULLが入る
