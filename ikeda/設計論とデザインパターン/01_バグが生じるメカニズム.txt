●バグとはなにか
・一貫性のないUI
・ユーザーニーズを満たさない仕様
・低劣なパフォーマンス
・クラッシュとデータ損失


----------------------------------------------------------------------------------------------------
☆バグを生み出す要素

●コーディング先行型開発(Code First Think Later)
プログラムの機能を定義するよりも先立ってコーディングを始める開発姿勢
 -計画的でないコードの増築により,動作が不安定になる
 -対症療法的なバグ回避により,問題が一層複雑化する

 →プロジェクト計画をしっかり練り上げてから手を動かす


●不完全な要求定義
事前設計を怠ることで当初の計画にない機能が入り込む"機能連鎖"が発生する

 →プログラムのニーズを分析し,それを満たす機能を定義する


●技術的な無知
OSや開発言語に関する知識の欠如は,必然的にバグを発生させる

 →開発に携わるメンバーの長所・短所を明らかにし,弱点を補完しあう
   スキル不足を自覚し,意識して改善する
   コードのレビューを行う


●低いモラル
バグを発生させてはいけない,バグのあるプログラムは出荷できない,という前提が守られていなければ,
品質は改善しない
 →品質改善のためにかかる相応のコストを受け入れる


----------------------------------------------------------------------------------------------------
☆バグ防止・バグフィックスに役立つこと
・OSと環境の理解
 OS機能や環境を誤用することは,深刻なバグを生じうる

・CPUの理解
 アセンブリ言語を数時間学習しておくと,デバッグにかかる時間を大幅に削減できる
