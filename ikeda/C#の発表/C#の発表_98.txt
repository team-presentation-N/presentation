●一般の文字列・配列の操作
・ゼロパディング
  $"{time%60:00}"

・文字列に情報がない(空文字orNull)ことを検知
   string.IsNullOrEmpty( string );
    -戻り値はbool

・文字列を指定した区切り文字で分割して配列に詰める
   (文字列変数).Split(区切り文字の配列,StringSplitOptions列挙型)

・配列やコレクションの要素を連結
   string.Join(string 区切り文字, params string[]);

・配列の要素を一括で変換
   [例 string[]をint[]に変換]
   intArray = Array.ConvertAll(strArray, int.Parse);


●LINQ
・配列の要素を一括で変換
   intArray = strArray.Select(int.Parse).ToArray();


●インデクサー
クラスのメンバーとして,任意のインデックス(添字)を紐付けた要素を定義できる


●Event関連 https://dobon.net/vb/dotnet/vb2cs/event.html
・EventArgsクラス
 発生したイベントデータを表す
 派生クラスが多数定義されていて,状況に応じてそちらが使われることが多い
 Empty静的プロパティにより,イベントデータのないイベントを表すことができる
  -この他に独自のメンバーは存在しない
    -つまり,イベントデータに追加の情報を持たせたい場合はEventArgsの派生クラスを定義し,
     メンバーを追加する必要がある

      [例]文字列情報を持たせる
         public class SampleEventArgs : EventArgs
         {
             public string message;
         }

・EventHandlerデリゲート
 (object, EventArgs)を引数にとり,voidを返すメソッドに対応するdelegateの型
  -上述の理由により,イベントデータに情報を持たせる場合は使用不可


〇おおまかな流れ
 ・event(delegate)の型を定義
 ・event変数を定義
 ・変数にHandlerを登録

 ・イベント発生
    -必要ならば,追加の情報持たせて呼び出す
 ・登録されたHandlerが呼び出される
