・HTTP(HyperText Transfer Protocol)

			HTTPとは、webブラウザがwebサーバと通信する際に主として使用する通信プロトコルであり、
			インターネット・プロトコル・スイートのメンバである。
			HTMLなどのテキストによって記述されたwebページなどのコンテンツの送受信に用いられる。（wikiより)
			
・HTTPプロトコルの仕組み
			非常にシンプルな仕組みでwebサーバとwebブラウザがTCP80ポートを使ってサーバ/クライアント形式で通信する
			最初にサーバ側がTCPの80番ポートで待ち受けてクライアント側はその８０番ポートに対してTCP通信を行う
・歴史
			1990年末　イギリスの物理学者　ティムバーナーズ＝リーとロバート・カイリューとともにウェブブラウザとウェブサーバを作成した。
			通信するにはプロトコルが必要なのでHTTPの最初期のバージョンが設計された。
		 	http://info.cern.ch/hypertext/WWW/TheProject.html 世界で一番最初のホームページ
		 	
・HTTPのバージョン
|
------------------------HTTP/0.9 1990
|				
| 				そもそもこのバージョンは存在しなく1.0より古いという意味合いで0.9と呼ばれるようになった。
| 			 	できることはURLで特定できるHTMLを取得するのみである	
|
------------------------HTTP/1.0 1996　RFC1945
|			|	
|			|---MIMEのようにメタデータを追加したメッセージ形式を導入することで、プロトコルの改善を図った。
|			|	0.9からの変更点として、送受信フォーマットにヘッダが追加された。
|			|	
|			|---0.9からの変更点
|				|
|				|---送受信のフォ−マットにヘッダが追加
|				|---リクエスト、レスポンス時のHTTPのバージョンが追加
|				|---リクエスト時にメソッドが送信できるようになる
|				|---レスポンス時にステータスコードが贈られるようになった
|				
|				
------------------------HTTP/1.1　1996
|			|
|			|---前のバージョンのあいまいな点をはっきりさせ、パーフォーマンス改善のための仕組みが取り組まれている
|			|
|			|---1.0からの変更点
|				|
|				|---通信の高速化
|				|---TLSのサポート
|				|---プロトコルのアップグレード
|				|---チャンクコーディングのサポート
|
|			
|
|-----------------------HTTP/2　2015
|			|
|			|---より効率的になりヘッダーの圧縮も行えるようになっている。基本的に文法は変わっていなく	これまでと同様に行える、
|			|	2018年の前半にはかなりの高い確率でHTTP/2のレスポンスを受ける。
|			|
|			|---1.1からの変更点
|				|
|				|---テキストベースからバイナリベース
|				|---ストリームを使ったデータの送受信
|				|---サーバープッシュ
|				|---ヘッダの圧縮
|				
|
|----------HTTP/3 2018
			|
			|---HTTPがQUIC上で動作するための変更とその結果の集まり
			|
			|---2.0からの変更点
				|
				|---UDPソケットを用いたプロトコル上で動作
				|---よりはやいハンドシェイクが行える
				|---すべての通信はTLS１．３により暗号化されている
				
・ARPANET（Advanced　Research Project Agency NETwork 高等研究計画局ネットワーク）

			世界で初めて運用されたパケット通信コンピュータネットワークであり、インターネットの期限でもある。
			アメリカ国防省の高等研究計画局が資金を提供し、いくつかの大学と研究機関でプロジェクトが行われた。
			ARPANETのパケット交換はイギリスの科学者ドナルド・デービスとリンカーン研究所のローレンス・ロバーツが設計に基づいていた（wiki）

・Content-Type
　
			ファイルの種類を示す情報を指定する項目

・ステータスコード　404 NOT FOUND

・HTTP cookie 

			ウェブサーバとウェブブラウザ間での状態を確認する通信プロトコル。ウェブブラウザの保存された情報のことを指す。
			訪問者のコンピュータに一時的にデータを書き込んで保存させる仕組み。
			ウェブサーバ側が指定したデータを保存しておくことができ利用者の識別や属性に関する情報最後に訪れたサイトなどを記録しておくことが多い




1.検索欄に入力
				
メソッド

・GET---サーバ上のファイルの本体を取り出す

・HEAD---サーバ上のファイルに関連すヘッダフィールドだけ取り出す

・POST---サーバ上の」プログラムにデータを送付

・PUT---サーバ上のファイルの置き換え

・DELETE---サーバ上のファイzるを削除する

・CONNECT---中継のための接続を作る

・OPTION---対象で利用できるメソッドの一覧を読み出す

・TRACE---リクエストをそのまま送り返す
